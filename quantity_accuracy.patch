Index: TabletCR/src/main/java/com/bematech/tcr/activity/BaseItemActivity.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/activity/BaseItemActivity.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/activity/BaseItemActivity.java	(working copy)
@@ -33,13 +33,16 @@
 import android.widget.TextView.OnEditorActionListener;
 import android.widget.Toast;
 
+import com.bematech.tcr.Logger;
 import com.bematech.tcr.R;
 import com.bematech.tcr.TcrApplication;
 import com.bematech.tcr.activity.PrinterAliasActivity.PrinterAliasConverter;
 import com.bematech.tcr.adapter.ObjectsCursorAdapter;
 import com.bematech.tcr.adapter.SpinnerAdapter;
 import com.bematech.tcr.component.CurrencyFormatInputFilter;
+import com.bematech.tcr.component.QuantityFormatInputFilter;
 import com.bematech.tcr.component.SignedCurrencyFormatInputFilter;
+import com.bematech.tcr.component.SignedQuantityFormatInputFilter;
 import com.bematech.tcr.fragment.UiHelper;
 import com.bematech.tcr.fragment.editmodifiers.EditDialog;
 import com.bematech.tcr.fragment.editmodifiers.EditDialog.OnEditListener;
@@ -422,14 +425,15 @@
     }
 
     protected void setFieldsFilters() {
-        InputFilter[] decimalFilter = new InputFilter[]{new CurrencyFormatInputFilter()};
-        InputFilter[] signedDecimalFilter = new InputFilter[]{new SignedCurrencyFormatInputFilter()};
-        availableQty.setFilters(signedDecimalFilter);
-        minimumQty.setFilters(decimalFilter);
-        recommendedQty.setFilters(decimalFilter);
-        salesPrice.setFilters(decimalFilter);
-        cost.setFilters(decimalFilter);
-        discount.setFilters(decimalFilter);
+        InputFilter[] currencyFilter = new InputFilter[]{new CurrencyFormatInputFilter()};
+        InputFilter[] quantityFilter = new InputFilter[]{new QuantityFormatInputFilter()};
+        InputFilter[] signedQuantityFilter = new InputFilter[]{new SignedQuantityFormatInputFilter()};
+        availableQty.setFilters(signedQuantityFilter);
+        minimumQty.setFilters(quantityFilter);
+        recommendedQty.setFilters(quantityFilter);
+        salesPrice.setFilters(currencyFilter);
+        cost.setFilters(currencyFilter);
+        discount.setFilters(currencyFilter);
     }
 
     protected void setFieldsChangeListeners() {
@@ -470,20 +474,32 @@
                     availableQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
                     minimumQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER);
                     recommendedQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER);
+
                     try {
-                        showIntegralInteger(availableQty, new BigDecimal(availableQty.getText().toString()));
-                        showIntegralInteger(minimumQty, new BigDecimal(minimumQty.getText().toString()));
-                        showIntegralInteger(recommendedQty, new BigDecimal(recommendedQty.getText().toString()));
+                        if (!TextUtils.isEmpty(availableQty.getText()))
+                            showIntegralInteger(availableQty, new BigDecimal(availableQty.getText().toString()));
+                        if (!TextUtils.isEmpty(availableQtyPencil.getText()))
+                            showIntegralInteger(availableQtyPencil, new BigDecimal(availableQtyPencil.getText().toString()));
+                        if (!TextUtils.isEmpty(minimumQty.getText()))
+                            showIntegralInteger(minimumQty, new BigDecimal(minimumQty.getText().toString()));
+                        if (!TextUtils.isEmpty(recommendedQty.getText()))
+                            showIntegralInteger(recommendedQty, new BigDecimal(recommendedQty.getText().toString()));
                     } catch (NumberFormatException ignore) {
                     }
                 } else {
                     availableQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED | EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
                     minimumQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
                     recommendedQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
+
                     try {
-                        showDecimal(availableQty, new BigDecimal(availableQty.getText().toString()));
-                        showDecimal(minimumQty, new BigDecimal(minimumQty.getText().toString()));
-                        showDecimal(recommendedQty, new BigDecimal(recommendedQty.getText().toString()));
+                        if (!TextUtils.isEmpty(availableQty.getText()))
+                            UiHelper.showQuantity(availableQty, new BigDecimal(availableQty.getText().toString()));
+                        if (!TextUtils.isEmpty(availableQtyPencil.getText()))
+                            UiHelper.showQuantity(availableQtyPencil, new BigDecimal(availableQtyPencil.getText().toString()));
+                        if (!TextUtils.isEmpty(minimumQty.getText()))
+                            UiHelper.showQuantity(minimumQty, new BigDecimal(minimumQty.getText().toString()));
+                        if (!TextUtils.isEmpty(recommendedQty.getText()))
+                            UiHelper.showQuantity(recommendedQty, new BigDecimal(recommendedQty.getText().toString()));
                     } catch (NumberFormatException ignore) {
                     }
                 }
Index: TabletCR/src/main/java/com/bematech/tcr/activity/EditItemActivity.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/activity/EditItemActivity.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/activity/EditItemActivity.java	(working copy)
@@ -13,6 +13,7 @@
 import com.bematech.tcr.R;
 import com.bematech.tcr.commands.store.inventory.DeleteItemCommand;
 import com.bematech.tcr.commands.store.inventory.EditItemCommand;
+import com.bematech.tcr.fragment.UiHelper;
 import com.bematech.tcr.fragment.dialog.AlertDialogFragment;
 import com.bematech.tcr.fragment.dialog.AlertDialogFragment.DialogType;
 import com.bematech.tcr.fragment.dialog.StyledDialogFragment.OnDialogClickListener;
@@ -31,6 +32,7 @@
 import static com.bematech.tcr.fragment.UiHelper.showDecimal;
 import static com.bematech.tcr.fragment.UiHelper.showInteger;
 import static com.bematech.tcr.fragment.UiHelper.showPrice;
+import static com.bematech.tcr.fragment.UiHelper.showQuantity;
 
 /**
  * Created by vkompaniets on 02.12.13.
@@ -125,23 +127,25 @@
         stockTrackingFlag.setChecked(model.isStockTracking);
         updateStockTrackingBlock(model.isStockTracking);
 
-        if (UnitUtil.isPcs(unitsLabel.getText().toString())){
+        if (isPcs()){
+            availableQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
+            minimumQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
+            recommendedQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
+
             showInteger(availableQty, model.availableQty);
             showInteger(availableQtyPencil, model.availableQty);
 
             showInteger(minimumQty, model.minimumQty);
             showInteger(recommendedQty, model.recommendedQty);
-            availableQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
-            minimumQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
-            recommendedQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED);
         }else{
-            showDecimal(availableQty, model.availableQty);
-            showDecimal(availableQtyPencil, model.availableQty);
-            showDecimal(minimumQty, model.minimumQty);
-            showDecimal(recommendedQty, model.recommendedQty);
             availableQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED|EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
             minimumQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED|EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
             recommendedQty.setInputType(EditorInfo.TYPE_CLASS_NUMBER | EditorInfo.TYPE_NUMBER_FLAG_SIGNED|EditorInfo.TYPE_NUMBER_FLAG_DECIMAL);
+
+            showQuantity(availableQty, model.availableQty);
+            showQuantity(availableQtyPencil, model.availableQty);
+            showQuantity(minimumQty, model.minimumQty);
+            showQuantity(recommendedQty, model.recommendedQty);
         }
 
         int pType = 0;
@@ -193,16 +197,26 @@
                         @Override
                         public void onReplace(BigDecimal value) {
                             model.availableQty = value;
-                            showInteger(availableQty, model.availableQty);
-                            showInteger(availableQtyPencil, model.availableQty);
+                            if (isPcs()){
+                                showInteger(availableQty, model.availableQty);
+                                showInteger(availableQtyPencil, model.availableQty);
+                            } else {
+                                showQuantity(availableQty, model.availableQty);
+                                showQuantity(availableQtyPencil, model.availableQty);
+                            }
                         }
 
                         @Override
                         public void onAdjust(BigDecimal value) {
                             BigDecimal old = model.availableQty == null ? BigDecimal.ZERO : model.availableQty;
                             model.availableQty = old.add(value);
-                            showInteger(availableQty, model.availableQty);
-                            showInteger(availableQtyPencil, model.availableQty);
+                            if (isPcs()){
+                                showInteger(availableQty, model.availableQty);
+                                showInteger(availableQtyPencil, model.availableQty);
+                            } else {
+                                showQuantity(availableQty, model.availableQty);
+                                showQuantity(availableQtyPencil, model.availableQty);
+                            }
                         }
                     }
             );
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/export/ExportQuickbooksInventoryCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/export/ExportQuickbooksInventoryCommand.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/export/ExportQuickbooksInventoryCommand.java	(working copy)
@@ -4,6 +4,7 @@
 import android.database.Cursor;
 import android.net.Uri;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopProvider;
 import com.bematech.tcr.store.ShopStore.ItemTable;
 import com.getbase.android.db.provider.ProviderAction;
@@ -69,13 +70,13 @@
         boolean stockTracking = _bool(c, c.getColumnIndex(ItemTable.STOCK_TRACKING));
         boolean isActive = _bool(c, c.getColumnIndex(ItemTable.ACTIVE_STATUS));
         BigDecimal cost = _decimal(c, c.getColumnIndex(ItemTable.COST));
-        BigDecimal availableQty = _decimal(c, c.getColumnIndex(ItemTable.TMP_AVAILABLE_QTY));
+        BigDecimal availableQty = _decimal(c, c.getColumnIndex(ItemTable.TMP_AVAILABLE_QTY), ContentValuesUtil.QUANTITY_SCALE);
 
         columns.add(stockTracking ? TYPE_INVENTORY_PART : TYPE_NON_INVENTORY_PART);
         columns.add(c.getString(c.getColumnIndex(ItemTable.DESCRIPTION)));
         columns.add(INCOME_ACCOUNT_SALES);
         columns.add(COGS_ACCOUNT_COGS);
-        columns.add(_decimal(availableQty));
+        columns.add(_decimal(availableQty, ContentValuesUtil.QUANTITY_SCALE));
         columns.add(_decimal(cost));
         //TODO: PREFERRED VENDOR will be added in the future
         columns.add(null);
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/history/UpdateSaleOrderItemRefundQtyCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/history/UpdateSaleOrderItemRefundQtyCommand.java	(revision 2217)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/history/UpdateSaleOrderItemRefundQtyCommand.java	(working copy)
@@ -73,7 +73,7 @@
             i.parentGuid = i.saleItemGuid;
             i.saleItemGuid = UUID.randomUUID().toString();
             i.orderGuid = returnOrder.guid;
-            i.qty = CalculationUtil.negative(info.get(i.parentGuid));
+            i.qty = CalculationUtil.negativeQty(info.get(i.parentGuid));
             values.add(i.toValues());
         }
 
@@ -112,7 +112,7 @@
     private TaskResult addMovements() {
         HashMap<String, BigDecimal> saleItems = new HashMap<String, BigDecimal>(returnItems.size());
         for (SaleOrderItemModel item : returnItems) {
-            saleItems.put(item.saleItemGuid, CalculationUtil.negative(item.qty));//item.qty is negative, we need to write positive value for return
+            saleItems.put(item.saleItemGuid, CalculationUtil.negativeQty(item.qty));//item.qty is negative, we need to write positive value for return
         }
         Cursor c = ProviderAction.query(URI_ITEMS_VIEW)
                 .projection(SaleItemExView2.SaleItemTable.SALE_ITEM_GUID,
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/inventory/EditItemCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/inventory/EditItemCommand.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/inventory/EditItemCommand.java	(working copy)
@@ -8,6 +8,7 @@
 import com.bematech.tcr.Logger;
 import com.bematech.tcr.commands.store.AsyncCommand;
 import com.bematech.tcr.jdbc.JdbcFactory;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.ItemModel;
 import com.bematech.tcr.model.ItemMovementModel;
 import com.bematech.tcr.service.BatchSqlCommand;
@@ -50,7 +51,7 @@
                 .where(ItemTable.GUID + " = ?", item.guid)
                 .perform(getContext());
         if(c.moveToFirst()){
-            availableQty = _decimal(c, 0);
+            availableQty = _decimal(c, 0, ContentValuesUtil.QUANTITY_SCALE);
         }
         c.close();
         if(item.isStockTracking && item.availableQty != null && item.availableQty.compareTo(availableQty) != 0){
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SplitSaleItemCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SplitSaleItemCommand.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SplitSaleItemCommand.java	(working copy)
@@ -8,6 +8,7 @@
 import com.bematech.tcr.commands.store.AsyncCommand;
 import com.bematech.tcr.jdbc.JdbcFactory;
 import com.bematech.tcr.jdbc.converters.SaleOrderItemJdbcConverter;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.SaleOrderItemAddonModel;
 import com.bematech.tcr.model.SaleOrderItemModel;
 import com.bematech.tcr.model.converter.SaleOrderItemFunction;
@@ -97,7 +98,7 @@
         oldQty = oldModel.qty.subtract(BigDecimal.ONE);
 
         ContentValues v = new ContentValues();
-        v.put(SaleItemTable.QUANTITY, _decimal(oldQty));
+        v.put(SaleItemTable.QUANTITY, _decimal(oldQty, ContentValuesUtil.QUANTITY_SCALE));
         ProviderAction
                 .update(URI_ITEM)
                 .values(v)
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SuccessOrderCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SuccessOrderCommand.java	(revision 2217)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/SuccessOrderCommand.java	(working copy)
@@ -136,7 +136,7 @@
         while (saleItems.moveToNext()) {
             boolean stockTracking = _bool(saleItems, 3);
             if(stockTracking){
-                items.add(new ItemMovementModel(saleItems.getString(0), saleItems.getString(1), CalculationUtil.negative(_decimal(saleItems, 2)), false, new Date()));
+                items.add(new ItemMovementModel(saleItems.getString(0), saleItems.getString(1), CalculationUtil.negativeQty(_decimal(saleItems, 2)), false, new Date()));
             }
             //command.syncNow(getContext(), new ItemMovementModel(saleItems.getString(0), saleItems.getString(1), CalculationUtil.negative(_decimal(saleItems, 2)), false));
         }
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/UpdateQtySaleOrderItemCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/UpdateQtySaleOrderItemCommand.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/saleorder/UpdateQtySaleOrderItemCommand.java	(working copy)
@@ -6,6 +6,7 @@
 import com.bematech.tcr.commands.store.AsyncCommand;
 import com.bematech.tcr.jdbc.JdbcFactory;
 import com.bematech.tcr.jdbc.converters.SaleOrderItemJdbcConverter;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.SaleOrderItemModel;
 import com.bematech.tcr.service.ISqlCommand;
 import com.bematech.tcr.store.ShopProvider;
@@ -41,7 +42,7 @@
 
         ProviderAction.update(URI_ITEMS)
                 .where(SaleItemTable.SALE_ITEM_GUID + " = ?", saleItemId)
-                .value(SaleItemTable.QUANTITY, _decimal(qty))
+                .value(SaleItemTable.QUANTITY, _decimal(qty, ContentValuesUtil.QUANTITY_SCALE))
                 .perform(getContext());
 
         model = new SaleOrderItemModel(saleItemId);
Index: TabletCR/src/main/java/com/bematech/tcr/commands/store/UpdateItemImportInfoCommand.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/commands/store/UpdateItemImportInfoCommand.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/commands/store/UpdateItemImportInfoCommand.java	(working copy)
@@ -7,6 +7,7 @@
 import com.bematech.tcr.commands.store.inventory.UpdateItemQtyCommand;
 import com.bematech.tcr.jdbc.JdbcFactory;
 import com.bematech.tcr.jdbc.converters.ItemsJdbcConverter;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.service.BatchSqlCommand;
 import com.bematech.tcr.service.ISqlCommand;
 import com.bematech.tcr.store.ShopProvider;
@@ -36,8 +37,8 @@
         ContentValues v = new ContentValues(5);
         v.put(ItemTable.SALE_PRICE, _decimal(price));
         v.put(ItemTable.COST, _decimal(cost));
-        v.put(ItemTable.MINIMUM_QTY, _decimal(minimumQty));
-        v.put(ItemTable.RECOMMENDED_QTY, _decimal(recommendedQty));
+        v.put(ItemTable.MINIMUM_QTY, _decimal(minimumQty, ContentValuesUtil.QUANTITY_SCALE));
+        v.put(ItemTable.RECOMMENDED_QTY, _decimal(recommendedQty, ContentValuesUtil.QUANTITY_SCALE));
         v.putAll(sv);
 
         return v;
Index: TabletCR/src/main/java/com/bematech/tcr/component/QuantityFormatInputFilter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/component/QuantityFormatInputFilter.java	(revision 0)
+++ TabletCR/src/main/java/com/bematech/tcr/component/QuantityFormatInputFilter.java	(working copy)
@@ -0,0 +1,13 @@
+package com.bematech.tcr.component;
+
+/**
+ * Created by gdubina on 29.11.13.
+ */
+public class QuantityFormatInputFilter extends RegexpFormatInputFilter{
+
+    private static final String REGEXP = "^(\\d{0,7})?(\\.[0-9]{0,3})?$";
+
+    public QuantityFormatInputFilter() {
+        super(REGEXP);
+    }
+}
Index: TabletCR/src/main/java/com/bematech/tcr/component/SignedQuantityFormatInputFilter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/component/SignedQuantityFormatInputFilter.java	(revision 0)
+++ TabletCR/src/main/java/com/bematech/tcr/component/SignedQuantityFormatInputFilter.java	(working copy)
@@ -0,0 +1,13 @@
+package com.bematech.tcr.component;
+
+/**
+ * Created by pkabakov on 09.01.14.
+ */
+public class SignedQuantityFormatInputFilter extends RegexpFormatInputFilter{
+
+    private static final String REGEXP = "(^(\\d{0,7})?(\\.[0-9]{0,3})?-?$)|(^(-?\\d{0,7})?(\\.[0-9]{0,3})?$)";
+
+    public SignedQuantityFormatInputFilter() {
+        super(REGEXP);
+    }
+}
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/edit/QtyEditFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/edit/QtyEditFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/edit/QtyEditFragment.java	(working copy)
@@ -1,20 +1,27 @@
 package com.bematech.tcr.fragment.edit;
 
 import android.support.v4.app.FragmentActivity;
+import android.text.InputFilter;
 
 import com.bematech.tcr.R;
+import com.bematech.tcr.component.CustomEditBox;
+import com.bematech.tcr.component.QuantityFormatInputFilter;
+import com.bematech.tcr.component.SignedQuantityFormatInputFilter;
 import com.bematech.tcr.fragment.dialog.DialogUtil;
 import com.googlecode.androidannotations.annotations.EFragment;
 
 import java.math.BigDecimal;
 
+import static com.bematech.tcr.util.CalculationUtil.negative;
+import static com.bematech.tcr.util.CalculationUtil.negativeQty;
+
 /**
  * Created by gdubina on 14/11/13.
  */
 @EFragment
 public class QtyEditFragment extends DecimalEditFragment{
 
-    private static final BigDecimal MAX_VALUE = new BigDecimal("9999.99");
+    private static final BigDecimal MAX_VALUE = new BigDecimal("9999.999");
 
     private static final String DIALOG_NAME = "qtyEditFragment";
 
@@ -31,6 +38,12 @@
     }
 
     @Override
+    protected void attachViews() {
+        super.attachViews();
+        editText.setFilters(new InputFilter[]{new QuantityFormatInputFilter()});
+    }
+
+    @Override
     protected BigDecimal getMaxValue() {
         return MAX_VALUE;
     }
@@ -41,6 +54,20 @@
             onEditQtyListener.onConfirm(value);
     }
 
+    @Override
+    protected BigDecimal getDecimalValue() {
+        String text = editText.getText().toString();
+        try {
+            if (text.endsWith("-")){
+                return negativeQty(new BigDecimal(text.substring(0, text.length() - 1)));
+            }else {
+                return new BigDecimal(text);
+            }
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
     public static void show(FragmentActivity activity, String saleItemGuid, BigDecimal qty, boolean isInteger, OnEditQtyListener onEditQtyListener) {
         DialogUtil.show(activity, DIALOG_NAME, QtyEditFragment_.builder().saleItemGuid(saleItemGuid).isInteger(isInteger).decimalValue(qty).build()).setOnEditQtyListener(onEditQtyListener);
     }
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/edit/RefundQtyEditFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/edit/RefundQtyEditFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/edit/RefundQtyEditFragment.java	(working copy)
@@ -1,14 +1,18 @@
 package com.bematech.tcr.fragment.edit;
 
 import android.support.v4.app.FragmentActivity;
+import android.text.InputFilter;
 
 import com.bematech.tcr.R;
+import com.bematech.tcr.component.QuantityFormatInputFilter;
 import com.bematech.tcr.fragment.dialog.DialogUtil;
 import com.bematech.tcr.model.payment.HistoryDetailedOrderItemModel;
 import com.googlecode.androidannotations.annotations.EFragment;
 
 import java.math.BigDecimal;
 
+import static com.bematech.tcr.util.CalculationUtil.negativeQty;
+
 /**
  * @author Ivan v. Rikhmayer
  */
@@ -31,6 +35,12 @@
     }
 
     @Override
+    protected void attachViews() {
+        super.attachViews();
+        editText.setFilters(new InputFilter[]{new QuantityFormatInputFilter()});
+    }
+
+    @Override
     protected BigDecimal getMaxValue() {
         return item.availableQty;
     }
@@ -40,6 +50,20 @@
         item.wantedQty = value;
     }
 
+    @Override
+    protected BigDecimal getDecimalValue() {
+        String text = editText.getText().toString();
+        try {
+            if (text.endsWith("-")){
+                return negativeQty(new BigDecimal(text.substring(0, text.length() - 1)));
+            }else {
+                return new BigDecimal(text);
+            }
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
     public RefundQtyEditFragment setItem(HistoryDetailedOrderItemModel item) {
         this.item = item;
         return this;
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/InventoryQtyEditDialog.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/InventoryQtyEditDialog.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/InventoryQtyEditDialog.java	(working copy)
@@ -5,14 +5,14 @@
 
 import com.bematech.tcr.R;
 import com.bematech.tcr.component.CustomEditBox;
-import com.bematech.tcr.component.SignedCurrencyFormatInputFilter;
+import com.bematech.tcr.component.SignedQuantityFormatInputFilter;
 import com.bematech.tcr.fragment.dialog.DialogUtil;
 import com.bematech.tcr.fragment.edit.QtyEditFragment;
 import com.googlecode.androidannotations.annotations.EFragment;
 
 import java.math.BigDecimal;
 
-import static com.bematech.tcr.util.CalculationUtil.negative;
+import static com.bematech.tcr.util.CalculationUtil.negativeQty;
 
 /**
  * Created by gdubina on 04/02/14.
@@ -25,7 +25,7 @@
     @Override
     protected void attachViews() {
         super.attachViews();
-        editText.setFilters(new InputFilter[]{new SignedCurrencyFormatInputFilter()});
+        editText.setFilters(new InputFilter[]{new SignedQuantityFormatInputFilter()});
         keyboard.setMinusVisible(true);
         editText.setEditListener(new CustomEditBox.IEditListener() {
             @Override
@@ -39,7 +39,7 @@
     protected BigDecimal validateForm() {
         BigDecimal value = getDecimalValue();
         BigDecimal maxValue = getMaxValue();
-        BigDecimal minValue = negative(maxValue);
+        BigDecimal minValue = negativeQty(maxValue);
         return value != null && value.compareTo(minValue) != -1 && value.compareTo(maxValue) != 1 ? value : null;
     }
 
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/ItemsFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/ItemsFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/inventory/ItemsFragment.java	(working copy)
@@ -35,6 +35,7 @@
 import static com.bematech.tcr.fragment.UiHelper.showDecimal;
 import static com.bematech.tcr.fragment.UiHelper.showInteger;
 import static com.bematech.tcr.fragment.UiHelper.showPrice;
+import static com.bematech.tcr.fragment.UiHelper.showQuantity;
 import static com.bematech.tcr.util.CalculationUtil.getSubTotal;
 
 /**
@@ -204,7 +205,7 @@
                 showInteger(holder.qty, item.availableQty);
                 holder.units.setText(null);
             } else {
-                showDecimal(holder.qty, item.availableQty);
+                showQuantity(holder.qty, item.availableQty);
                 holder.units.setText(item.unitsLabel);
             }
 
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/reports/InventoryValueFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/reports/InventoryValueFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/reports/InventoryValueFragment.java	(working copy)
@@ -30,6 +30,7 @@
 import com.bematech.tcr.fragment.dialog.StyledDialogFragment.OnDialogClickListener;
 import com.bematech.tcr.fragment.dialog.WaitDialogFragment;
 import com.bematech.tcr.fragment.reports.InventoryValueFragment.Info;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopProvider;
 import com.bematech.tcr.store.ShopStore.ItemTable;
 import com.bematech.tcr.util.CalculationUtil;
@@ -83,7 +84,7 @@
                         BigDecimal qty = BigDecimal.ZERO;
                         BigDecimal cost = BigDecimal.ZERO;
                         while (c.moveToNext()) {
-                            BigDecimal q = _decimal(c.getString(0));
+                            BigDecimal q = _decimal(c.getString(0), ContentValuesUtil.QUANTITY_SCALE);
                             BigDecimal cc = _decimal(c.getString(1));
 
                             qty = qty.add(q);
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/reports/ReorderReportFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/reports/ReorderReportFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/reports/ReorderReportFragment.java	(working copy)
@@ -149,9 +149,9 @@
         protected View bindView(View convertView, int position, ItemQtyInfo item) {
             UiHolder holder = (UiHolder) convertView.getTag();
             holder.item.setText(item.description);
-            UiHelper.showInteger(holder.qty, item.qty);
-            UiHelper.showInteger(holder.recQty, item.recQty);
-            UiHelper.showInteger(holder.toOrderQty, item.recQty.subtract(item.qty));
+            UiHelper.showQuantityInteger(holder.qty, item.qty);
+            UiHelper.showQuantityInteger(holder.recQty, item.recQty);
+            UiHelper.showQuantityInteger(holder.toOrderQty, item.recQty.subtract(item.qty));
 
             return convertView;
         }
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/InventoryStatusReportFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/InventoryStatusReportFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/InventoryStatusReportFragment.java	(working copy)
@@ -50,6 +50,7 @@
 
 import static com.bematech.tcr.fragment.UiHelper.showDecimal;
 import static com.bematech.tcr.fragment.UiHelper.showPrice;
+import static com.bematech.tcr.fragment.UiHelper.showQuantity;
 import static com.bematech.tcr.util.CursorUtil._wrap;
 
 /**
@@ -267,7 +268,7 @@
                 UIHolderItem holder = (UIHolderItem) convertView.getTag();
                 ItemInfo itemInfo = (ItemInfo) item;
                 holder.title.setText(itemInfo.title);
-                showDecimal(holder.onHand, itemInfo.onHand);
+                showQuantity(holder.onHand, itemInfo.onHand);
                 showPrice(holder.unitCost, itemInfo.unitCost);
                 showPrice(holder.totalCost, itemInfo.totalCost);
                 holder.active.setVisibility(itemInfo.active ? View.VISIBLE : View.INVISIBLE);
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/ItemManualMovementFragment.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/ItemManualMovementFragment.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/reports/sub/ItemManualMovementFragment.java	(working copy)
@@ -19,6 +19,7 @@
 import java.util.List;
 
 import static com.bematech.tcr.fragment.UiHelper.showDecimal;
+import static com.bematech.tcr.fragment.UiHelper.showQuantity;
 
 /**
  * Created by vkompaniets on 30.01.14.
@@ -68,7 +69,7 @@
 
             holder.itemName.setText(item.itemName);
             holder.date.setText(DateUtils.dateOnlyFormat(item.date));
-            showDecimal(holder.qty, item.qty);
+            showQuantity(holder.qty, item.qty);
 
             return convertView;
         }
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/saleorder/ItemView.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/saleorder/ItemView.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/saleorder/ItemView.java	(working copy)
@@ -23,6 +23,7 @@
 import static com.bematech.tcr.fragment.UiHelper.showInteger;
 import static com.bematech.tcr.fragment.UiHelper.showPercentInBrackets;
 import static com.bematech.tcr.fragment.UiHelper.showPrice;
+import static com.bematech.tcr.fragment.UiHelper.showQuantity;
 
 @EViewGroup(R.layout.saleorder_items_item_view)
 public class ItemView extends FrameLayout {
@@ -185,7 +186,7 @@
         if (unitsLabel == null) {
             showInteger(this.itemQty, qty);
         } else {
-            showDecimal(this.itemQty, qty);
+            showQuantity(this.itemQty, qty);
         }
 
         showPrice(this.itemUnitPrice, price);
Index: TabletCR/src/main/java/com/bematech/tcr/fragment/UiHelper.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/fragment/UiHelper.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/fragment/UiHelper.java	(working copy)
@@ -21,6 +21,8 @@
     private static final DecimalFormat priceFormat = new DecimalFormat("0.00");
     private static final DecimalFormat percentFormat = new DecimalFormat("0.##");
     private static final DecimalFormat integralIntegerFormat = new DecimalFormat("0");
+    private static final DecimalFormat quantityFormat = new DecimalFormat("0.000");
+    private static final DecimalFormat quantityIntegerFormat = new DecimalFormat("0.###");
 
     //private static final DecimalFormat percentInBracketsFormat = new DecimalFormat(" (0.##)");
 
@@ -58,6 +60,14 @@
         }
     }
 
+    public static void showQuantityInteger(TextView textView, BigDecimal decimal) {
+        if (decimal == null) {
+            textView.setText(null);
+        } else {
+            textView.setText(quantityIntegerFormat.format(decimal));
+        }
+    }
+
     public static void showIntegralInteger(TextView textView, BigDecimal decimal) {
         if (decimal == null) {
             textView.setText(null);
@@ -101,6 +111,14 @@
         }
     }
 
+    public static void showQuantity(TextView textView, BigDecimal decimal) {
+        if (decimal == null) {
+            textView.setText(null);
+        } else {
+            textView.setText(quantityFormat.format(decimal));
+        }
+    }
+
     public static String priceFormat(BigDecimal price) {
         if (price == null)
             return null;
@@ -110,7 +128,7 @@
     public static String qtyFormat(BigDecimal qty) {
         if (qty == null)
             return null;
-        return decimalFormat.format(qty);
+        return quantityFormat.format(qty);
     }
 
     public static String trimFormat(BigDecimal qty) {
Index: TabletCR/src/main/java/com/bematech/tcr/function/OrderTotalPriceCalculator.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/function/OrderTotalPriceCalculator.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/function/OrderTotalPriceCalculator.java	(working copy)
@@ -16,8 +16,6 @@
 import java.util.List;
 
 import static com.bematech.tcr.util.CalculationUtil.getSubTotal;
-import static com.bematech.tcr.util.CalculationUtil.negative;
-import static com.bematech.tcr.util.CalculationUtil.value;
 
 /**
  * Created by gdubina on 17/12/13.
Index: TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsJdbcConverter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsJdbcConverter.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsJdbcConverter.java	(working copy)
@@ -2,6 +2,7 @@
 
 import android.content.ContentValues;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.DiscountType;
 import com.bematech.tcr.model.ItemModel;
 import com.bematech.tcr.model.PriceType;
@@ -99,8 +100,8 @@
                 _enum(DiscountType.class, rs.getString(DISCOUNT_TYPE), DiscountType.PERCENT),
                 rs.getBoolean(TAXABLE),
                 rs.getBigDecimal(COST),
-                rs.getBigDecimal(MINIMUM_QTY),
-                rs.getBigDecimal(RECOMMENDED_QTY),
+                rs.getBigDecimal(MINIMUM_QTY, ContentValuesUtil.QUANTITY_SCALE),
+                rs.getBigDecimal(RECOMMENDED_QTY, ContentValuesUtil.QUANTITY_SCALE),
                 rs.getString(UPDATE_QTY_FLAG),
                 rs.getString(TAX_GROUP_ID),
                 rs.getString(DEFAULT_MODIFIER_ID),
@@ -139,8 +140,8 @@
                 .add(DISCOUNT_TYPE, item.discountType)
                 .add(TAXABLE, item.isTaxable)
                 .add(COST, item.cost)
-                .add(MINIMUM_QTY, item.minimumQty)
-                .add(RECOMMENDED_QTY, item.recommendedQty)
+                .add(MINIMUM_QTY, item.minimumQty, ContentValuesUtil.QUANTITY_SCALE)
+                .add(RECOMMENDED_QTY, item.recommendedQty, ContentValuesUtil.QUANTITY_SCALE)
                 .add(UPDATE_QTY_FLAG, item.updateQtyFlag)
                 .add(TAX_GROUP_ID, item.taxGroupGuid)
                 .add(DEFAULT_MODIFIER_ID, item.defaultModifierGuid)
@@ -167,8 +168,8 @@
                 .add(DISCOUNT_TYPE, item.discountType)
                 .add(TAXABLE, item.isTaxable)
                 .add(COST, item.cost)
-                .add(MINIMUM_QTY, item.minimumQty)
-                .add(RECOMMENDED_QTY, item.recommendedQty)
+                .add(MINIMUM_QTY, item.minimumQty, ContentValuesUtil.QUANTITY_SCALE)
+                .add(RECOMMENDED_QTY, item.recommendedQty, ContentValuesUtil.QUANTITY_SCALE)
                 .add(UPDATE_QTY_FLAG, item.updateQtyFlag)
                 .add(TAX_GROUP_ID, item.taxGroupGuid)
                 .add(DEFAULT_MODIFIER_ID, item.defaultModifierGuid)
@@ -227,8 +228,8 @@
         return _update(ITEM_TABLE_NAME)
                 .add(SALE_PRICE, price)
                 .add(COST, cost)
-                .add(MINIMUM_QTY, minimumQty)
-                .add(RECOMMENDED_QTY, recommendedQty)
+                .add(MINIMUM_QTY, minimumQty, ContentValuesUtil.QUANTITY_SCALE)
+                .add(RECOMMENDED_QTY, recommendedQty, ContentValuesUtil.QUANTITY_SCALE)
                 .where(ID, guid)
                 .build();
     }
Index: TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsMovementJdbcConverter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsMovementJdbcConverter.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/ItemsMovementJdbcConverter.java	(working copy)
@@ -2,6 +2,7 @@
 
 import android.content.ContentValues;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.ItemMovementModel;
 import com.bematech.tcr.service.SingleSqlCommand;
 import com.bematech.tcr.util.JdbcJSONObject;
@@ -45,7 +46,7 @@
                 rs.getString(MOVEMENT_ID),
                 rs.getString(ITEM_ID),
                 rs.getString(ITEM_UPDATE_QTY_FLAG),
-                rs.getBigDecimal(QTY),
+                rs.getBigDecimal(QTY, ContentValuesUtil.QUANTITY_SCALE),
                 rs.getBoolean(MANUAL),
                 rs.getDate(CREATE_TIME)
         );
@@ -67,7 +68,7 @@
                 .add(MOVEMENT_ID, item.guid)
                 .add(ITEM_ID, item.itemGuid)
                 .add(ITEM_UPDATE_QTY_FLAG, item.itemUpdateFlag)
-                .add(QTY, item.qty)
+                .add(QTY, item.qty, ContentValuesUtil.QUANTITY_SCALE)
                 .add(MANUAL, item.manual)
                 .add(CREATE_TIME, item.createTime)
                 .build();
Index: TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/SaleOrderItemJdbcConverter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/SaleOrderItemJdbcConverter.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/jdbc/converters/SaleOrderItemJdbcConverter.java	(working copy)
@@ -2,6 +2,7 @@
 
 import android.content.ContentValues;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.DiscountType;
 import com.bematech.tcr.model.PriceType;
 import com.bematech.tcr.model.SaleOrderItemModel;
@@ -73,7 +74,7 @@
                 rs.getString(SALE_ITEM_ID),
                 rs.getString(ORDER_ID),
                 rs.getString(ITEM_ID),
-                rs.getBigDecimal(QUANTITY),
+                rs.getBigDecimal(QUANTITY, ContentValuesUtil.QUANTITY_SCALE),
                 _enum(PriceType.class, rs.getString(PRICE_TYPE), PriceType.FIXED),
                 rs.getBigDecimal(PRICE),
                 rs.getBoolean(DISCOUNTABLE),
@@ -108,7 +109,7 @@
                 .add(SALE_ITEM_ID, model.saleItemGuid)
                 .add(ORDER_ID, model.orderGuid)
                 .add(ITEM_ID, model.itemGuid)
-                .add(QUANTITY, model.qty)
+                .add(QUANTITY, model.qty, ContentValuesUtil.QUANTITY_SCALE)
                 .add(PRICE, model.price)
                 .add(PRICE_TYPE, model.priceType)
                 .add(DISCOUNTABLE, model.discountable)
@@ -130,7 +131,7 @@
     @Override
     public SingleSqlCommand updateSQL(SaleOrderItemModel model) {
         return _update(SALE_ORDER_ITEMS_TABLE_NAME)
-                .add(QUANTITY, model.qty)
+                .add(QUANTITY, model.qty, ContentValuesUtil.QUANTITY_SCALE)
                 .add(SEQUENCE, model.sequence)
 
                 .add(FINAL_GROSS_PRICE, model.finalGrossPrice)
@@ -143,7 +144,7 @@
 
     public SingleSqlCommand updateQty(SaleOrderItemModel model) {
         return _update(SALE_ORDER_ITEMS_TABLE_NAME)
-                .add(QUANTITY, model.qty)
+                .add(QUANTITY, model.qty, ContentValuesUtil.QUANTITY_SCALE)
 
                 .add(FINAL_GROSS_PRICE, model.finalGrossPrice)
                 .add(FINAL_TAX, model.finalTax)
@@ -156,7 +157,7 @@
 
     public SingleSqlCommand updateQty(String saleItemGuid, BigDecimal qty) {
         return _update(SALE_ORDER_ITEMS_TABLE_NAME)
-                .add(QUANTITY, qty)
+                .add(QUANTITY, qty, ContentValuesUtil.QUANTITY_SCALE)
                 .where(SALE_ITEM_ID, saleItemGuid)
                 .build();
 
Index: TabletCR/src/main/java/com/bematech/tcr/jdbc/JdbcBuilder.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/jdbc/JdbcBuilder.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/jdbc/JdbcBuilder.java	(working copy)
@@ -1,6 +1,7 @@
 package com.bematech.tcr.jdbc;
 
 import com.bematech.tcr.TcrApplication;
+import com.bematech.tcr.service.DecimalQueryParam;
 import com.bematech.tcr.service.QueryParam;
 import com.bematech.tcr.service.SingleSqlCommand;
 import com.google.common.base.Function;
@@ -53,6 +54,11 @@
         //return addColumn(column, _jdbcDecimal(value));
     }
 
+    public JdbcBuilder add(String column, BigDecimal value, int decimalScale) {
+        columns.add(new Pair(column, new DecimalQueryParam(value, decimalScale)));
+        return this;
+    }
+
     public JdbcBuilder add(String column, boolean value) {
         columns.add(new Pair(column, Types.BOOLEAN, value));
         return this;
Index: TabletCR/src/main/java/com/bematech/tcr/model/ContentValuesUtil.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/ContentValuesUtil.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/ContentValuesUtil.java	(working copy)
@@ -22,6 +22,9 @@
  * Created by gdubina on 06/11/13.
  */
 public final class ContentValuesUtil {
+    public static final int DECIMAL_SCALE = 2;
+    public static final int QUANTITY_SCALE = 3;
+
     private static ThreadLocal<DecimalFormat> decimalFormat = new ThreadLocal<DecimalFormat>() {
         protected DecimalFormat initialValue() {
             DecimalFormat format = new DecimalFormat("0.00");
@@ -29,11 +32,30 @@
             return format;
         }
     };
+    private static ThreadLocal<DecimalFormat> quantityFormat = new ThreadLocal<DecimalFormat>() {
+        protected DecimalFormat initialValue() {
+            DecimalFormat format = new DecimalFormat("0.000");
+            format.setParseBigDecimal(true);
+            return format;
+        }
+    };
 
     public static BigDecimal _decimal(Cursor c, int columnIndex) {
         return _decimal(c.getString(columnIndex));
     }
 
+    public static BigDecimal _decimal(Cursor c, int columnIndex, int scale) {
+        return _decimal(c.getString(columnIndex), scale);
+    }
+
+    public static String _decimal(BigDecimal decimal, int scale) {
+        if (decimal == null) {
+            return "";
+        }
+
+        return scale <= DECIMAL_SCALE ? decimalFormat.get().format(decimal) : quantityFormat.get().format(decimal);
+    }
+
     public static String _decimal(BigDecimal decimal) {
         if (decimal == null) {
             return "";
@@ -84,6 +106,18 @@
         return new Date(time);
     }
 
+    public static BigDecimal _decimalCheckScale(String decimalValue) {
+        if (TextUtils.isEmpty(decimalValue))
+            return BigDecimal.ZERO;
+        int scale = getDecimalScale(decimalValue);
+        try {
+            return (BigDecimal) (scale <= DECIMAL_SCALE ? decimalFormat.get().parse(decimalValue) : quantityFormat.get().parse(decimalValue));
+        } catch (ParseException e) {
+            Logger.e("Parse number error", e);
+        }
+        return BigDecimal.ZERO;
+    }
+
     public static BigDecimal _decimal(String decimalValue) {
         if (TextUtils.isEmpty(decimalValue))
             return BigDecimal.ZERO;
@@ -95,6 +129,24 @@
         return BigDecimal.ZERO;
     }
 
+    public static int getDecimalScale(String decimalValue) {
+        if (TextUtils.isEmpty(decimalValue))
+            return 0;
+        int dotIndex = decimalValue.indexOf('.');
+        return dotIndex < 0 ? 0 : decimalValue.length() - (dotIndex + 1);
+    }
+
+    public static BigDecimal _decimal(String decimalValue, int scale) {
+        if (TextUtils.isEmpty(decimalValue))
+            return BigDecimal.ZERO;
+        try {
+            return (BigDecimal) (scale <= DECIMAL_SCALE ? decimalFormat.get().parse(decimalValue) : quantityFormat.get().parse(decimalValue));
+        } catch (ParseException e) {
+            Logger.e("Parse number error", e);
+        }
+        return BigDecimal.ZERO;
+    }
+
     public static DiscountType _discountType(Cursor c, int index) {
         return c.isNull(index) ? null : DiscountType.valueOf(c.getInt(index));
     }
Index: TabletCR/src/main/java/com/bematech/tcr/model/converter/ItemFunction.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/converter/ItemFunction.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/converter/ItemFunction.java	(working copy)
@@ -2,6 +2,7 @@
 
 import android.database.Cursor;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.ItemModel;
 import com.bematech.tcr.store.ShopStore.ItemTable;
 
@@ -55,7 +56,7 @@
                 _priceType(c, indexHolder.get(ItemTable.PRICE_TYPE)),
                 _decimal(c.getString(indexHolder.get(ItemTable.SALE_PRICE))),
                 //_decimal(c.getString(indexHolder.get(ItemTable.QUANTITY))),
-                _decimal(c.getString(indexHolder.get(ItemTable.TMP_AVAILABLE_QTY))),
+                _decimal(c.getString(indexHolder.get(ItemTable.TMP_AVAILABLE_QTY)), ContentValuesUtil.QUANTITY_SCALE),
                 c.getString(indexHolder.get(ItemTable.UNITS_LABEL)),
                 c.getInt(indexHolder.get(ItemTable.STOCK_TRACKING)) == 1,
                 c.getInt(indexHolder.get(ItemTable.ACTIVE_STATUS)) == 1,
@@ -64,8 +65,8 @@
                 _discountType(c, indexHolder.get(ItemTable.DISCOUNT_TYPE)),
                 c.getInt(indexHolder.get(ItemTable.TAXABLE)) == 1,
                 _decimal(c.getString(indexHolder.get(ItemTable.COST))),
-                _decimal(c.getString(indexHolder.get(ItemTable.MINIMUM_QTY))),
-                _decimal(c.getString(indexHolder.get(ItemTable.RECOMMENDED_QTY))),
+                _decimal(c.getString(indexHolder.get(ItemTable.MINIMUM_QTY)), ContentValuesUtil.QUANTITY_SCALE),
+                _decimal(c.getString(indexHolder.get(ItemTable.RECOMMENDED_QTY)), ContentValuesUtil.QUANTITY_SCALE),
                 c.getString(indexHolder.get(ItemTable.UPDATE_QTY_FLAG)),
                 c.getString(indexHolder.get(ItemTable.TAX_GROUP_GUID)),
                 c.getString(c.getColumnIndex(ItemTable.DEFAULT_MODIFIER_GUID)),
Index: TabletCR/src/main/java/com/bematech/tcr/model/converter/SaleOrderItemFunction.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/converter/SaleOrderItemFunction.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/converter/SaleOrderItemFunction.java	(working copy)
@@ -2,6 +2,7 @@
 
 import android.database.Cursor;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.model.SaleOrderItemModel;
 import com.bematech.tcr.store.ShopStore.SaleItemTable;
 import com.google.common.base.Function;
@@ -22,7 +23,7 @@
                 c.getString(c.getColumnIndex(SaleItemTable.SALE_ITEM_GUID)),
                 c.getString(c.getColumnIndex(SaleItemTable.ORDER_GUID)),
                 c.getString(c.getColumnIndex(SaleItemTable.ITEM_GUID)),
-                _decimal(c, c.getColumnIndex(SaleItemTable.QUANTITY)),
+                _decimal(c, c.getColumnIndex(SaleItemTable.QUANTITY), ContentValuesUtil.QUANTITY_SCALE),
                 _priceType(c, c.getColumnIndex(SaleItemTable.PRICE_TYPE)),
                 _decimal(c, c.getColumnIndex(SaleItemTable.PRICE)),
                 _bool(c, c.getColumnIndex(SaleItemTable.DISCOUNTABLE)),
@@ -35,7 +36,7 @@
                 _decimal(c, c.getColumnIndex(SaleItemTable.FINAL_GROSS_PRICE)),
                 _decimal(c, c.getColumnIndex(SaleItemTable.FINAL_TAX)),
                 _decimal(c, c.getColumnIndex(SaleItemTable.FINAL_DISCOUNT)),
-                _decimal(c, c.getColumnIndex(SaleItemTable.TMP_REFUND_QUANTITY)),
+                _decimal(c, c.getColumnIndex(SaleItemTable.TMP_REFUND_QUANTITY), ContentValuesUtil.QUANTITY_SCALE),
                 c.getString(c.getColumnIndex(SaleItemTable.NOTES)),
                 c.getInt(c.getColumnIndex(SaleItemTable.HAS_NOTES)) == 1
         );
Index: TabletCR/src/main/java/com/bematech/tcr/model/ItemModel.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/ItemModel.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/ItemModel.java	(working copy)
@@ -131,8 +131,8 @@
 
         values.put(ItemTable.TAXABLE, isTaxable);
         values.put(ItemTable.COST, _decimal(cost));
-        values.put(ItemTable.MINIMUM_QTY, _decimal(minimumQty));
-        values.put(ItemTable.RECOMMENDED_QTY, _decimal(recommendedQty));
+        values.put(ItemTable.MINIMUM_QTY, _decimal(minimumQty, ContentValuesUtil.QUANTITY_SCALE));
+        values.put(ItemTable.RECOMMENDED_QTY, _decimal(recommendedQty, ContentValuesUtil.QUANTITY_SCALE));
         values.put(ItemTable.UPDATE_QTY_FLAG, updateQtyFlag);
         values.put(ItemTable.TAX_GROUP_GUID, taxGroupGuid);
 
Index: TabletCR/src/main/java/com/bematech/tcr/model/ItemMovementModel.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/ItemMovementModel.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/ItemMovementModel.java	(working copy)
@@ -59,7 +59,7 @@
 		values.put(ItemMovementTable.GUID, guid);
 		values.put(ItemMovementTable.ITEM_GUID, itemGuid);
         values.put(ItemMovementTable.ITEM_UPDATE_QTY_FLAG, itemUpdateFlag);
-        values.put(ItemMovementTable.QTY, _decimal(qty));
+        values.put(ItemMovementTable.QTY, _decimal(qty, ContentValuesUtil.QUANTITY_SCALE));
         values.put(ItemMovementTable.MANUAL, manual);
         values.put(ItemMovementTable.CREATE_TIME, createTime.getTime());
 		return values;
Index: TabletCR/src/main/java/com/bematech/tcr/model/SaleOrderItemModel.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/model/SaleOrderItemModel.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/model/SaleOrderItemModel.java	(working copy)
@@ -83,7 +83,7 @@
         values.put(SaleItemTable.SALE_ITEM_GUID, saleItemGuid);
         values.put(SaleItemTable.ORDER_GUID, orderGuid);
         values.put(SaleItemTable.ITEM_GUID, itemGuid);
-        values.put(SaleItemTable.QUANTITY, _decimal(qty));
+        values.put(SaleItemTable.QUANTITY, _decimal(qty, ContentValuesUtil.QUANTITY_SCALE));
 
         values.put(SaleItemTable.PRICE, _decimal(price));
         _putEnum(values, SaleItemTable.PRICE_TYPE, priceType);
Index: TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalOrderBuilder.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalOrderBuilder.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalOrderBuilder.java	(working copy)
@@ -16,7 +16,7 @@
  */
 public class DigitalOrderBuilder extends BaseDigitalBuilder implements ITextPrinter {
 
-    private static final DecimalFormat decimalFormat = new DecimalFormat("0.##");
+    private static final DecimalFormat quantityFormat = new DecimalFormat("0.###");
     private static final DecimalFormat priceFormat = new DecimalFormat("0.00");
     private static final SimpleDateFormat dateFormat = new SimpleDateFormat("MMM d, yyyy, h:mm a", Locale.US);
     private static final String SPACES_2 = "&nbsp;&nbsp;";
@@ -26,7 +26,7 @@
         otherSymbols.setDecimalSeparator('.');
         otherSymbols.setGroupingSeparator(',');
         priceFormat.setDecimalFormatSymbols(otherSymbols);
-        decimalFormat.setDecimalFormatSymbols(otherSymbols);
+        quantityFormat.setDecimalFormatSymbols(otherSymbols);
     }
 
 
@@ -80,7 +80,7 @@
     }
 
     public void add(String title, BigDecimal qty, BigDecimal price) {
-        add(title, decimalFormat.format(qty), priceFormat.format(price));
+        add(title, quantityFormat.format(qty), priceFormat.format(price));
     }
 
     @Override
Index: TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalReportItemBuilder.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalReportItemBuilder.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/print/builder/DigitalReportItemBuilder.java	(working copy)
@@ -17,7 +17,7 @@
 public class DigitalReportItemBuilder extends BaseDigitalBuilder implements IReportsPrinter {
 
     private static final DecimalFormat priceFormat = new DecimalFormat("0.00");
-    private static final DecimalFormat decimalFormat = new DecimalFormat("0.##");
+    private static final DecimalFormat quantityFormat = new DecimalFormat("0.###");
     private static final SimpleDateFormat dateFormat = new SimpleDateFormat("MMM d, yyyy, h:mm a", Locale.US);
     private static final SimpleDateFormat dateRangeFormat = new SimpleDateFormat("MMM d, yyyy, HH:mm", Locale.US);
     protected static final SimpleDateFormat shortDateFormat = new SimpleDateFormat("MMM d, HH:mm", Locale.US);
@@ -39,7 +39,7 @@
 
     @Override
     public void add(String title, BigDecimal qty, BigDecimal price) {
-        add(title, decimalFormat.format(qty), priceFormat.format(price));
+        add(title, quantityFormat.format(qty), priceFormat.format(price));
     }
 
     @Override
@@ -54,17 +54,17 @@
 
     @Override
     public void add(Date date, String title, BigDecimal qty) {
-        add2(shortDateFormat.format(date), title, decimalFormat.format(qty));
+        add2(shortDateFormat.format(date), title, quantityFormat.format(qty));
     }
 
     @Override
     public void add(String title, BigDecimal onHand, BigDecimal unitCost, BigDecimal totalCost, boolean active) {
-        add5Columns(title, decimalFormat.format(onHand), priceFormat.format(unitCost), priceFormat.format(totalCost), active ? "yes" : "no");
+        add5Columns(title, quantityFormat.format(onHand), priceFormat.format(unitCost), priceFormat.format(totalCost), active ? "yes" : "no");
     }
 
     @Override
     public void add4Columns(String title, BigDecimal qty1, BigDecimal qty2, BigDecimal qty3) {
-        add4Columns(title, decimalFormat.format(qty1), decimalFormat.format(qty2), decimalFormat.format(qty3));
+        add4Columns(title, quantityFormat.format(qty1), quantityFormat.format(qty2), quantityFormat.format(qty3));
     }
 
     @Override
Index: TabletCR/src/main/java/com/bematech/tcr/print/printer/BasePosTextPrinter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/printer/BasePosTextPrinter.java	(revision 2232)
+++ TabletCR/src/main/java/com/bematech/tcr/print/printer/BasePosTextPrinter.java	(working copy)
@@ -28,7 +28,7 @@
  */
 public class BasePosTextPrinter implements IPrinter {
 
-    public static final DecimalFormat decimalFormat = new DecimalFormat("0.##");
+    public static final DecimalFormat quantityFormat = new DecimalFormat("0.###");
     public static final DecimalFormat priceFormat = new DecimalFormat("0.00");
     public static final SimpleDateFormat dateFormat = new SimpleDateFormat("MMM d, yyyy, h:mm a", Locale.US);
     public static final String SPACES_2 = "  ";
@@ -38,7 +38,7 @@
         otherSymbols.setDecimalSeparator('.');
         otherSymbols.setGroupingSeparator(',');
         priceFormat.setDecimalFormatSymbols(otherSymbols);
-        decimalFormat.setDecimalFormatSymbols(otherSymbols);
+        quantityFormat.setDecimalFormatSymbols(otherSymbols);
     }
 
     protected static final int PRINTER_MAX_TEXT_LEN = 41;
Index: TabletCR/src/main/java/com/bematech/tcr/print/printer/PosKitchenPrinter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/printer/PosKitchenPrinter.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/print/printer/PosKitchenPrinter.java	(working copy)
@@ -20,7 +20,7 @@
 
     @Override
     public void add(BigDecimal qty, String description) {
-        add(new PrintLineAction(decimalFormat.format(qty) + " " + description));
+        add(new PrintLineAction(quantityFormat.format(qty) + " " + description));
     }
 
 
Index: TabletCR/src/main/java/com/bematech/tcr/print/printer/PosOrderTextPrinter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/printer/PosOrderTextPrinter.java	(revision 2232)
+++ TabletCR/src/main/java/com/bematech/tcr/print/printer/PosOrderTextPrinter.java	(working copy)
@@ -54,7 +54,7 @@
     }
 
     public void add(String title, BigDecimal qty, BigDecimal price) {
-        add(title, decimalFormat.format(qty), priceFormat.format(price));
+        add(title, quantityFormat.format(qty), priceFormat.format(price));
     }
 
     @Override
Index: TabletCR/src/main/java/com/bematech/tcr/print/printer/PosReportsPrinter.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/print/printer/PosReportsPrinter.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/print/printer/PosReportsPrinter.java	(working copy)
@@ -40,7 +40,7 @@
 
     @Override
     public void add(String title, BigDecimal qty, BigDecimal price) {
-        add(new PrintLineAction(formatString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_PRICE_LEN, PRINTER_MAX_QTY_LEN, title, decimalFormat.format(qty), priceFormat.format(price))));
+        add(new PrintLineAction(formatString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_PRICE_LEN, PRINTER_MAX_QTY_LEN, title, quantityFormat.format(qty), priceFormat.format(price))));
     }
 
     @Override
@@ -55,7 +55,7 @@
 
     @Override
     public void add(Date date, String title, BigDecimal qty) {
-        add(new PrintLineAction(formatString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_QTY_LEN, SHORT_DATE_LEN, title, shortDateFormat.format(date), decimalFormat.format(qty))));
+        add(new PrintLineAction(formatString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_QTY_LEN, SHORT_DATE_LEN, title, shortDateFormat.format(date), quantityFormat.format(qty))));
     }
 
     @Override
@@ -65,7 +65,7 @@
 
     @Override
     public void add4Columns(String title, BigDecimal qty1, BigDecimal qty2, BigDecimal qty3) {
-        add(new PrintLineAction(format4ColumnsString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_QTY_LEN, PRINTER_MAX_QTY_LEN, PRINTER_MAX_QTY_LEN, title, decimalFormat.format(qty1), decimalFormat.format(qty2), decimalFormat.format(qty3))));
+        add(new PrintLineAction(format4ColumnsString(PRINTER_MAX_TEXT_LEN, PRINTER_MAX_QTY_LEN, PRINTER_MAX_QTY_LEN, PRINTER_MAX_QTY_LEN, title, quantityFormat.format(qty1), quantityFormat.format(qty2), quantityFormat.format(qty3))));
     }
 
     @Override
Index: TabletCR/src/main/java/com/bematech/tcr/reports/InventoryValueQuery.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/reports/InventoryValueQuery.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/reports/InventoryValueQuery.java	(working copy)
@@ -6,6 +6,7 @@
 
 import com.bematech.tcr.R;
 import com.bematech.tcr.fragment.reports.InventoryValueFragment.Info;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopProvider;
 import com.bematech.tcr.store.ShopStore.ItemTable;
 import com.bematech.tcr.util.CalculationUtil;
@@ -33,7 +34,7 @@
         BigDecimal qty = BigDecimal.ZERO;
         BigDecimal cost = BigDecimal.ZERO;
         while (c.moveToNext()) {
-            BigDecimal q = _decimal(c.getString(0));
+            BigDecimal q = _decimal(c.getString(0), ContentValuesUtil.QUANTITY_SCALE);
             BigDecimal cc = _decimal(c.getString(1));
 
             qty = qty.add(q);
Index: TabletCR/src/main/java/com/bematech/tcr/reports/ItemManualMovementQuery.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/reports/ItemManualMovementQuery.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/reports/ItemManualMovementQuery.java	(working copy)
@@ -5,6 +5,7 @@
 import android.net.Uri;
 
 import com.bematech.tcr.Logger;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopProvider;
 import com.bematech.tcr.store.ShopSchema2.ItemManualMovementView2.ItemMovementTable;
 import com.bematech.tcr.store.ShopSchema2.ItemManualMovementView2.ItemTable;
@@ -82,7 +83,7 @@
 
         BigDecimal result = BigDecimal.ZERO;
         if(c.moveToFirst()){
-            result = _decimal(c.getString(0));
+            result = _decimal(c.getString(0), ContentValuesUtil.QUANTITY_SCALE);
             Logger.d("[LOG] loadPrevData for %s = %s", itemGuid, c.getString(1));
         }
         c.close();
Index: TabletCR/src/main/java/com/bematech/tcr/reports/ReorderReportQuery.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/reports/ReorderReportQuery.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/reports/ReorderReportQuery.java	(working copy)
@@ -5,6 +5,7 @@
 import android.net.Uri;
 import android.support.v4.content.Loader;
 
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopProvider;
 import com.bematech.tcr.store.ShopStore.ItemTable;
 import com.getbase.android.db.loaders.CursorLoaderBuilder;
@@ -63,8 +64,8 @@
         public ItemQtyInfo apply(Cursor c) {
             return new ItemQtyInfo(
                     c.getString(0),
-                    _decimal(c.getString(1)),
-                    _decimal(c.getString(2))
+                    _decimal(c.getString(1), ContentValuesUtil.QUANTITY_SCALE),
+                    _decimal(c.getString(2), ContentValuesUtil.QUANTITY_SCALE)
             );
         }
     }
Index: TabletCR/src/main/java/com/bematech/tcr/service/DecimalQueryParam.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/service/DecimalQueryParam.java	(revision 0)
+++ TabletCR/src/main/java/com/bematech/tcr/service/DecimalQueryParam.java	(working copy)
@@ -0,0 +1,46 @@
+package com.bematech.tcr.service;
+
+import com.bematech.tcr.model.ContentValuesUtil;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.math.BigDecimal;
+import java.sql.Types;
+import java.util.Date;
+
+import static com.bematech.tcr.model.ContentValuesUtil._date;
+import static com.bematech.tcr.model.ContentValuesUtil._long;
+
+/**
+ * Created by pkabakov on 04/04/14.
+ */
+public class DecimalQueryParam extends QueryParam {
+
+    private int decimalScale;
+
+    public DecimalQueryParam(BigDecimal value, int decimalScale) {
+        super(Types.DECIMAL, value);
+        this.decimalScale = decimalScale;
+    }
+
+    public JSONObject toJson() throws JSONException {
+        JSONObject jsonObject = new JSONObject();
+        jsonObject.put(JSON_TYPE, type);
+        switch (type){
+            case Types.DECIMAL:
+                jsonObject.put(JSON_OBJECT, ContentValuesUtil._decimal((BigDecimal) value, decimalScale));
+                break;
+            case Types.BIGINT:
+                jsonObject.put(JSON_OBJECT, _long((Long)value));
+                break;
+            case Types.TIMESTAMP:
+                jsonObject.put(JSON_OBJECT, _date((Date) value));
+                break;
+            default:
+                jsonObject.putOpt(JSON_OBJECT, value);
+        }
+        return jsonObject;
+    }
+
+}
Index: TabletCR/src/main/java/com/bematech/tcr/service/QueryParam.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/service/QueryParam.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/service/QueryParam.java	(working copy)
@@ -9,6 +9,7 @@
 
 import static com.bematech.tcr.model.ContentValuesUtil._date;
 import static com.bematech.tcr.model.ContentValuesUtil._decimal;
+import static com.bematech.tcr.model.ContentValuesUtil._decimalCheckScale;
 import static com.bematech.tcr.model.ContentValuesUtil._long;
 
 /**
@@ -31,7 +32,7 @@
         jsonObject.put(JSON_TYPE, type);
         switch (type){
             case Types.DECIMAL:
-                jsonObject.put(JSON_OBJECT, _decimal((BigDecimal)value));
+                jsonObject.put(JSON_OBJECT, _decimal((BigDecimal) value));
                 break;
             case Types.BIGINT:
                 jsonObject.put(JSON_OBJECT, _long((Long)value));
@@ -50,7 +51,7 @@
         Object value;
         switch (type){
             case Types.DECIMAL:
-                value = _decimal(pJson.getString(JSON_OBJECT));
+                value = _decimalCheckScale(pJson.getString(JSON_OBJECT));
                 break;
             case Types.BIGINT:
                 value = _long(pJson.getString(JSON_OBJECT));
Index: TabletCR/src/main/java/com/bematech/tcr/store/ShopProviderExt.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/store/ShopProviderExt.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/store/ShopProviderExt.java	(working copy)
@@ -9,6 +9,7 @@
 
 import com.bematech.tcr.Logger;
 import com.bematech.tcr.function.FastOrderTotalQuery;
+import com.bematech.tcr.model.ContentValuesUtil;
 import com.bematech.tcr.store.ShopSchema2.ItemMovementView2.MovementTable;
 import com.bematech.tcr.store.ShopStore.ItemMovementTable;
 import com.bematech.tcr.store.ShopStore.ItemMovementView;
@@ -172,7 +173,7 @@
 
         Logger.d("recalculateAvailableQty: %s; available = %s", itemGuid, availableQty);
         ProviderAction.update(ITEM_URI)
-                .value(ItemTable.TMP_AVAILABLE_QTY, _decimal(availableQty))
+                .value(ItemTable.TMP_AVAILABLE_QTY, _decimal(availableQty, ContentValuesUtil.QUANTITY_SCALE))
                 .where(ItemTable.GUID + " = ?", itemGuid)
                 .perform(getContext());
 
@@ -189,13 +190,13 @@
                 .where(ItemMovementTable.ITEM_UPDATE_QTY_FLAG + " = ?", movementFlag)
                 .perform(getContext());
         while (c.moveToNext()) {
-            availableQty = availableQty.add(_decimal(c, 0));
+            availableQty = availableQty.add(_decimal(c, 0, ContentValuesUtil.QUANTITY_SCALE));
         }
         c.close();
 
         Logger.d("recalculateMovementAvailableQty: %s; available = %s", movementFlag, availableQty);
         ProviderAction.update(ITEM_MOVEMENT_REAL_URI)
-                .value(ItemMovementTable.TMP_AVAILABLE_QTY, _decimal(availableQty))
+                .value(ItemMovementTable.TMP_AVAILABLE_QTY, _decimal(availableQty, ContentValuesUtil.QUANTITY_SCALE))
                 .where(ItemMovementTable.ITEM_UPDATE_QTY_FLAG + " = ?", movementFlag)
                 .where(ItemMovementTable.MANUAL + " = ?", 1)
                 .perform(getContext());
@@ -220,7 +221,7 @@
                 .perform(getContext());
         while (c.moveToNext()) {
             String flag = c.getString(0);
-            BigDecimal availableQty = _decimal(c.getString(1));
+            BigDecimal availableQty = _decimal(c.getString(1), ContentValuesUtil.QUANTITY_SCALE);
             BigDecimal old = result.get(flag);
             if (old == null) {
                 result.put(flag, availableQty);
@@ -235,7 +236,7 @@
             ContentValues v = new ContentValues(2);
             Logger.d("recalculateMovementAvailableQty2 %s = %s", e.getKey(), e.getValue());
             v.put(ItemMovementTable.ITEM_UPDATE_QTY_FLAG, e.getKey());
-            v.put(ItemMovementTable.TMP_AVAILABLE_QTY, _decimal(e.getValue()));
+            v.put(ItemMovementTable.TMP_AVAILABLE_QTY, _decimal(e.getValue(), ContentValuesUtil.QUANTITY_SCALE));
             values.add(v);
         }
         bulkUpdate(ItemMovementTable.TABLE_NAME, values, ItemMovementTable.ITEM_UPDATE_QTY_FLAG, ItemMovementTable.MANUAL + " = ?", new String[]{"1"});
@@ -263,7 +264,7 @@
         for (Entry<String, BigDecimal> e : availableQtys.entrySet()) {
             ContentValues v = new ContentValues(2);
             v.put(ItemTable.GUID, e.getKey());
-            v.put(ItemTable.TMP_AVAILABLE_QTY, _decimal(e.getValue()));
+            v.put(ItemTable.TMP_AVAILABLE_QTY, _decimal(e.getValue(), ContentValuesUtil.QUANTITY_SCALE));
             values.add(v);
         }
         bulkUpdate(ItemTable.TABLE_NAME, values, ItemTable.GUID);
@@ -280,7 +281,7 @@
         HashMap<String, BigDecimal> returnedQtys = new HashMap<String, BigDecimal>();
         while (c.moveToNext()) {
             String saleItemGuid = c.getString(0);
-            BigDecimal returnedQty = _decimal(c, 1);//should be negative, it's returned qty
+            BigDecimal returnedQty = _decimal(c, 1, ContentValuesUtil.QUANTITY_SCALE);//should be negative, it's returned qty
             BigDecimal old = returnedQtys.get(saleItemGuid);
             if (old != null) {
                 returnedQty = old.add(returnedQty);
@@ -297,14 +298,14 @@
         ArrayList<ContentValues> values = new ArrayList<ContentValues>(c.getCount());
         while (c.moveToNext()) {
             String saleItemGuid = c.getString(0);
-            BigDecimal qty = _decimal(c, 1);
+            BigDecimal qty = _decimal(c, 1, ContentValuesUtil.QUANTITY_SCALE);
             BigDecimal returnedQty = returnedQtys.get(saleItemGuid);//should be negative, it's returned qty
             if (returnedQty == null) {
                 continue;
             }
             ContentValues v = new ContentValues(2);
             v.put(SaleItemTable.SALE_ITEM_GUID, saleItemGuid);
-            v.put(SaleItemTable.TMP_REFUND_QUANTITY, _decimal(returnedQty));
+            v.put(SaleItemTable.TMP_REFUND_QUANTITY, _decimal(returnedQty, ContentValuesUtil.QUANTITY_SCALE));
             values.add(v);
         }
         c.close();
@@ -324,7 +325,7 @@
         BigDecimal returnedQty = BigDecimal.ZERO;
         while (c.moveToNext()) {
             String saleItemGuid = c.getString(0);
-            BigDecimal retQty = _decimal(c, 1);//should be negative, it's returned qty
+            BigDecimal retQty = _decimal(c, 1, ContentValuesUtil.QUANTITY_SCALE);//should be negative, it's returned qty
             returnedQty.add(retQty);
         }
         c.close();
@@ -341,11 +342,11 @@
         ArrayList<ContentValues> values = new ArrayList<ContentValues>(c.getCount());
         if (c.moveToNext()) {
             String saleItemGuid = c.getString(0);
-            BigDecimal qty = _decimal(c, 1);
+            BigDecimal qty = _decimal(c, 1, ContentValuesUtil.QUANTITY_SCALE);
 
             ContentValues v = new ContentValues(2);
             v.put(SaleItemTable.SALE_ITEM_GUID, saleItemGuid);
-            v.put(SaleItemTable.TMP_REFUND_QUANTITY, _decimal(returnedQty));
+            v.put(SaleItemTable.TMP_REFUND_QUANTITY, _decimal(returnedQty, ContentValuesUtil.QUANTITY_SCALE));
             values.add(v);
         }
         c.close();
Index: TabletCR/src/main/java/com/bematech/tcr/util/CalculationUtil.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/util/CalculationUtil.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/util/CalculationUtil.java	(working copy)
@@ -18,6 +18,7 @@
     public static final BigDecimal ONE_HUNDRED = new BigDecimal("100.00");
     private final static int PERCENT_SCALE = 3;
     private final static int RESULT_SCALE = 2;
+    private final static int QUANTITY_SCALE = 3;
     private final static RoundingMode MONEY_ROUNDING = RoundingMode.HALF_UP;
 
     private CalculationUtil(){}
@@ -119,6 +120,12 @@
         return add.multiply(NEGATIVE).setScale(RESULT_SCALE, MONEY_ROUNDING);
     }
 
+    public static BigDecimal negativeQty(BigDecimal add) {
+        if(add == null)
+            return null;
+        return add.multiply(NEGATIVE).setScale(QUANTITY_SCALE, MONEY_ROUNDING);
+    }
+
     public static BigDecimal divide(BigDecimal v1, BigDecimal v2){
         if(BigDecimal.ZERO.compareTo(v2) == 0)
             return BigDecimal.ZERO;
Index: TabletCR/src/main/java/com/bematech/tcr/util/JdbcJSONObject.java
===================================================================
--- TabletCR/src/main/java/com/bematech/tcr/util/JdbcJSONObject.java	(revision 2204)
+++ TabletCR/src/main/java/com/bematech/tcr/util/JdbcJSONObject.java	(working copy)
@@ -81,6 +81,13 @@
         return _decimal(decimal);
     }
 
+    public BigDecimal getBigDecimal(String column, int scale) throws JSONException {
+        String decimal = getString(column);
+        if (TextUtils.isEmpty(decimal))
+            return null;
+        return _decimal(decimal, scale);
+    }
+
     @Override
     public String getString(String column) throws JSONException {
         if(isNull(column)){
