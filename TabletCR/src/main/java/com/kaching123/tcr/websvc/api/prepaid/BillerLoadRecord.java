package com.kaching123.tcr.websvc.api.prepaid;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/4/2014 8:12:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class BillerLoadRecord implements KvmSerializable, Serializable {
    
    public String vendorID;
    public String vendorName;
    public String vendorAccountLengthMin;
    public String vendorAccountLengthMax;
    public String vendorTranAmtMin;
    public String vendorTranAmtMax;
    public String custNameRequired;
    public String senderNameRequired;
    public String senderRequiredAmtMin;
    public String maskAcctOnReceipt;
    public String postingTimeDesc;
    public String postingTimeCutoff;
    public String vendorRemitTiming;
    public String presentmentFlag;
    public String formFlag;
    public BillerLoadFormDetails formDetails;
    
    public BillerLoadRecord(){}
    
    public BillerLoadRecord(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("VendorID"))
        {
            Object obj = soapObject.getProperty("VendorID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorID = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorID = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorName"))
        {
            Object obj = soapObject.getProperty("VendorName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorName = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorName = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorAccountLengthMin"))
        {
            Object obj = soapObject.getProperty("VendorAccountLengthMin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorAccountLengthMin = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorAccountLengthMin = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorAccountLengthMax"))
        {
            Object obj = soapObject.getProperty("VendorAccountLengthMax");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorAccountLengthMax = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorAccountLengthMax = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorTranAmtMin"))
        {
            Object obj = soapObject.getProperty("VendorTranAmtMin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorTranAmtMin = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorTranAmtMin = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorTranAmtMax"))
        {
            Object obj = soapObject.getProperty("VendorTranAmtMax");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorTranAmtMax = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorTranAmtMax = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustNameRequired"))
        {
            Object obj = soapObject.getProperty("CustNameRequired");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                custNameRequired = j.toString();
            }else if (obj!= null && obj instanceof String){
                custNameRequired = (String) obj;
            }
        }
        if (soapObject.hasProperty("SenderNameRequired"))
        {
            Object obj = soapObject.getProperty("SenderNameRequired");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                senderNameRequired = j.toString();
            }else if (obj!= null && obj instanceof String){
                senderNameRequired = (String) obj;
            }
        }
        if (soapObject.hasProperty("SenderRequiredAmtMin"))
        {
            Object obj = soapObject.getProperty("SenderRequiredAmtMin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                senderRequiredAmtMin = j.toString();
            }else if (obj!= null && obj instanceof String){
                senderRequiredAmtMin = (String) obj;
            }
        }
        if (soapObject.hasProperty("MaskAcctOnReceipt"))
        {
            Object obj = soapObject.getProperty("MaskAcctOnReceipt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maskAcctOnReceipt = j.toString();
            }else if (obj!= null && obj instanceof String){
                maskAcctOnReceipt = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostingTimeDesc"))
        {
            Object obj = soapObject.getProperty("PostingTimeDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postingTimeDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                postingTimeDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostingTimeCutoff"))
        {
            Object obj = soapObject.getProperty("PostingTimeCutoff");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postingTimeCutoff = j.toString();
            }else if (obj!= null && obj instanceof String){
                postingTimeCutoff = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorRemitTiming"))
        {
            Object obj = soapObject.getProperty("VendorRemitTiming");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorRemitTiming = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorRemitTiming = (String) obj;
            }
        }
        if (soapObject.hasProperty("PresentmentFlag"))
        {
            Object obj = soapObject.getProperty("PresentmentFlag");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                presentmentFlag = j.toString();
            }else if (obj!= null && obj instanceof String){
                presentmentFlag = (String) obj;
            }
        }
        if (soapObject.hasProperty("FormFlag"))
        {
            Object obj = soapObject.getProperty("FormFlag");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                formFlag = j.toString();
            }else if (obj!= null && obj instanceof String){
                formFlag = (String) obj;
            }
        }
        if (soapObject.hasProperty("FormDetails"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FormDetails");
            formDetails =  new BillerLoadFormDetails (j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return vendorID;
            case 1:
                return vendorName;
            case 2:
                return vendorAccountLengthMin;
            case 3:
                return vendorAccountLengthMax;
            case 4:
                return vendorTranAmtMin;
            case 5:
                return vendorTranAmtMax;
            case 6:
                return custNameRequired;
            case 7:
                return senderNameRequired;
            case 8:
                return senderRequiredAmtMin;
            case 9:
                return maskAcctOnReceipt;
            case 10:
                return postingTimeDesc;
            case 11:
                return postingTimeCutoff;
            case 12:
                return vendorRemitTiming;
            case 13:
                return presentmentFlag;
            case 14:
                return formFlag;
            case 15:
                return formDetails;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 16;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorID";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorAccountLengthMin";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorAccountLengthMax";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorTranAmtMin";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorTranAmtMax";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustNameRequired";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SenderNameRequired";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SenderRequiredAmtMin";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MaskAcctOnReceipt";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostingTimeDesc";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostingTimeCutoff";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorRemitTiming";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PresentmentFlag";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FormFlag";
                break;
            case 15:
                info.type = BillerLoadFormDetails.class;
                info.name = "FormDetails";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
