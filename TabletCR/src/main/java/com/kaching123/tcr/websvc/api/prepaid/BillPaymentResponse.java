package com.kaching123.tcr.websvc.api.prepaid;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/4/2014 8:12:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class BillPaymentResponse implements KvmSerializable, Serializable {
    
    public long resultId;
    public String resultDescription;
    public String vendorId;
    public String paymentAmount;
    public String feeAmount;
    public String accountNumber;
    public String altAccountNumber;
    public String additAccountNumber1;
    public String additAccountNumber2;
    public String customerFirstName;
    public String customerLastName;
    public String trackingNumber;
    public String batchNumber;
    public String authorizationCode;
    public String returnMessageField;
    public String presentmentMessage;
    public String postingDateMessage;
    public String receiptMessage;
    
    public BillPaymentResponse(){}
    
    public BillPaymentResponse(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ResultId"))
        {
            Object obj = soapObject.getProperty("ResultId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                resultId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                resultId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ResultDescription"))
        {
            Object obj = soapObject.getProperty("ResultDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                resultDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                resultDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("VendorId"))
        {
            Object obj = soapObject.getProperty("VendorId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vendorId = j.toString();
            }else if (obj!= null && obj instanceof String){
                vendorId = (String) obj;
            }
        }
        if (soapObject.hasProperty("PaymentAmount"))
        {
            Object obj = soapObject.getProperty("PaymentAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                paymentAmount = j.toString();
            }else if (obj!= null && obj instanceof String){
                paymentAmount = (String) obj;
            }
        }
        if (soapObject.hasProperty("FeeAmount"))
        {
            Object obj = soapObject.getProperty("FeeAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                feeAmount = j.toString();
            }else if (obj!= null && obj instanceof String){
                feeAmount = (String) obj;
            }
        }
        if (soapObject.hasProperty("AccountNumber"))
        {
            Object obj = soapObject.getProperty("AccountNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                accountNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                accountNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("AltAccountNumber"))
        {
            Object obj = soapObject.getProperty("AltAccountNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                altAccountNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                altAccountNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("AdditAccountNumber1"))
        {
            Object obj = soapObject.getProperty("AdditAccountNumber1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additAccountNumber1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                additAccountNumber1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AdditAccountNumber2"))
        {
            Object obj = soapObject.getProperty("AdditAccountNumber2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additAccountNumber2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                additAccountNumber2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerFirstName"))
        {
            Object obj = soapObject.getProperty("CustomerFirstName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerFirstName = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerFirstName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerLastName"))
        {
            Object obj = soapObject.getProperty("CustomerLastName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerLastName = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerLastName = (String) obj;
            }
        }
        if (soapObject.hasProperty("TrackingNumber"))
        {
            Object obj = soapObject.getProperty("TrackingNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                trackingNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                trackingNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("BatchNumber"))
        {
            Object obj = soapObject.getProperty("BatchNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                batchNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                batchNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("AuthorizationCode"))
        {
            Object obj = soapObject.getProperty("AuthorizationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                authorizationCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                authorizationCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("ReturnMessage"))
        {
            Object obj = soapObject.getProperty("ReturnMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                returnMessageField = j.toString();
            }else if (obj!= null && obj instanceof String){
                returnMessageField = (String) obj;
            }
        }
        if (soapObject.hasProperty("PresentmentMessage"))
        {
            Object obj = soapObject.getProperty("PresentmentMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                presentmentMessage = j.toString();
            }else if (obj!= null && obj instanceof String){
                presentmentMessage = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostingDateMessage"))
        {
            Object obj = soapObject.getProperty("PostingDateMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postingDateMessage = j.toString();
            }else if (obj!= null && obj instanceof String){
                postingDateMessage = (String) obj;
            }
        }
        if (soapObject.hasProperty("ReceiptMessage"))
        {
            Object obj = soapObject.getProperty("ReceiptMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                receiptMessage = j.toString();
            }else if (obj!= null && obj instanceof String){
                receiptMessage = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return resultId;
            case 1:
                return resultDescription;
            case 2:
                return vendorId;
            case 3:
                return paymentAmount;
            case 4:
                return feeAmount;
            case 5:
                return accountNumber;
            case 6:
                return altAccountNumber;
            case 7:
                return additAccountNumber1;
            case 8:
                return additAccountNumber2;
            case 9:
                return customerFirstName;
            case 10:
                return customerLastName;
            case 11:
                return trackingNumber;
            case 12:
                return batchNumber;
            case 13:
                return authorizationCode;
            case 14:
                return returnMessageField;
            case 15:
                return presentmentMessage;
            case 16:
                return postingDateMessage;
            case 17:
                return receiptMessage;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 18;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Long.class;
                info.name = "ResultId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ResultDescription";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VendorId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PaymentAmount";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FeeAmount";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AccountNumber";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AltAccountNumber";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AdditAccountNumber1";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AdditAccountNumber2";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerFirstName";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerLastName";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TrackingNumber";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BatchNumber";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AuthorizationCode";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReturnMessage";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PresentmentMessage";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostingDateMessage";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReceiptMessage";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
