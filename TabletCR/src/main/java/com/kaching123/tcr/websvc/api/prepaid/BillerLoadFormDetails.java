package com.kaching123.tcr.websvc.api.prepaid;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/4/2014 8:12:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class BillerLoadFormDetails implements KvmSerializable, Serializable {
    
    public String altLookupLabel;
    public String altLookupVisibleLen;
    public String altLookupMaxLen;
    public String addInfoLabel1;
    public String addInfoReqFlag1;
    public String addInfoVisibleLen1;
    public String addInfoMaxLen1;
    public String addInfoLabel2;
    public String addInfoReqFlag2;
    public String addInfoVisibleLen2;
    public String addInfoMaxLen2;
    
    public BillerLoadFormDetails(){}
    
    public BillerLoadFormDetails(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AltLookupLabel"))
        {
            Object obj = soapObject.getProperty("AltLookupLabel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                altLookupLabel = j.toString();
            }else if (obj!= null && obj instanceof String){
                altLookupLabel = (String) obj;
            }
        }
        if (soapObject.hasProperty("AltLookupVisibleLen"))
        {
            Object obj = soapObject.getProperty("AltLookupVisibleLen");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                altLookupVisibleLen = j.toString();
            }else if (obj!= null && obj instanceof String){
                altLookupVisibleLen = (String) obj;
            }
        }
        if (soapObject.hasProperty("AltLookupMaxLen"))
        {
            Object obj = soapObject.getProperty("AltLookupMaxLen");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                altLookupMaxLen = j.toString();
            }else if (obj!= null && obj instanceof String){
                altLookupMaxLen = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoLabel1"))
        {
            Object obj = soapObject.getProperty("AddInfoLabel1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoLabel1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoLabel1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoReqFlag1"))
        {
            Object obj = soapObject.getProperty("AddInfoReqFlag1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoReqFlag1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoReqFlag1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoVisibleLen1"))
        {
            Object obj = soapObject.getProperty("AddInfoVisibleLen1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoVisibleLen1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoVisibleLen1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoMaxLen1"))
        {
            Object obj = soapObject.getProperty("AddInfoMaxLen1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoMaxLen1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoMaxLen1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoLabel2"))
        {
            Object obj = soapObject.getProperty("AddInfoLabel2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoLabel2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoLabel2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoReqFlag2"))
        {
            Object obj = soapObject.getProperty("AddInfoReqFlag2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoReqFlag2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoReqFlag2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoVisibleLen2"))
        {
            Object obj = soapObject.getProperty("AddInfoVisibleLen2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoVisibleLen2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoVisibleLen2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddInfoMaxLen2"))
        {
            Object obj = soapObject.getProperty("AddInfoMaxLen2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                addInfoMaxLen2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                addInfoMaxLen2 = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return altLookupLabel;
            case 1:
                return altLookupVisibleLen;
            case 2:
                return altLookupMaxLen;
            case 3:
                return addInfoLabel1;
            case 4:
                return addInfoReqFlag1;
            case 5:
                return addInfoVisibleLen1;
            case 6:
                return addInfoMaxLen1;
            case 7:
                return addInfoLabel2;
            case 8:
                return addInfoReqFlag2;
            case 9:
                return addInfoVisibleLen2;
            case 10:
                return addInfoMaxLen2;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AltLookupLabel";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AltLookupVisibleLen";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AltLookupMaxLen";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoLabel1";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoReqFlag1";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoVisibleLen1";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoMaxLen1";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoLabel2";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoReqFlag2";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoVisibleLen2";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddInfoMaxLen2";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
