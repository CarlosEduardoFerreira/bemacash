package com.kaching123.tcr.websvc.api.prepaid;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/4/2014 8:12:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class Legal implements KvmSerializable, Serializable {
    
    public String version;
    public String copyright;
    public String disclaimer;
    public String privacyURL;
    public String termsAndConditions;
    public String contactPhone;
    
    public Legal(){}
    
    public Legal(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Version"))
        {
            Object obj = soapObject.getProperty("Version");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                version = j.toString();
            }else if (obj!= null && obj instanceof String){
                version = (String) obj;
            }
        }
        if (soapObject.hasProperty("Copyright"))
        {
            Object obj = soapObject.getProperty("Copyright");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                copyright = j.toString();
            }else if (obj!= null && obj instanceof String){
                copyright = (String) obj;
            }
        }
        if (soapObject.hasProperty("Disclaimer"))
        {
            Object obj = soapObject.getProperty("Disclaimer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                disclaimer = j.toString();
            }else if (obj!= null && obj instanceof String){
                disclaimer = (String) obj;
            }
        }
        if (soapObject.hasProperty("PrivacyURL"))
        {
            Object obj = soapObject.getProperty("PrivacyURL");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                privacyURL = j.toString();
            }else if (obj!= null && obj instanceof String){
                privacyURL = (String) obj;
            }
        }
        if (soapObject.hasProperty("TermsAndConditions"))
        {
            Object obj = soapObject.getProperty("TermsAndConditions");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                termsAndConditions = j.toString();
            }else if (obj!= null && obj instanceof String){
                termsAndConditions = (String) obj;
            }
        }
        if (soapObject.hasProperty("ContactPhone"))
        {
            Object obj = soapObject.getProperty("ContactPhone");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                contactPhone = j.toString();
            }else if (obj!= null && obj instanceof String){
                contactPhone = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return version;
            case 1:
                return copyright;
            case 2:
                return disclaimer;
            case 3:
                return privacyURL;
            case 4:
                return termsAndConditions;
            case 5:
                return contactPhone;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Version";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Copyright";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Disclaimer";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PrivacyURL";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TermsAndConditions";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ContactPhone";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
